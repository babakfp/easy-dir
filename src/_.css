/*
type of output: boolean
description: is $string contains $find
*/
/*
type of output: string
description: return value in String type
*/
/*
type of output: value selfs
=> input(left) output(right)
And conversely^
*/
/*
type of output: string
=> input(1px) output(-1px)
=> input(-1px) output(1px)
*/
/*
type of output: value selfs
=> input(1px 2px 3px 4px) output(1px 4px 3px 2px)
And conversely^
*/
.functions {
  direction: rtl;
  direction: ltr;
  float: right;
  float: left;
  text-align: right;
  text-align: left;
  margin-left: 20px;
  margin-right: 20px;
  padding-left: 20px;
  padding-right: 20px;
  border-left: 1px solid gray;
  border-right: 1px solid gray;
  margin: 10px 25px 20px 15px;
  padding: 10px 25px 20px 15px;
  transform: translateX(30px);
  transform: translateX(-30px);
  transform: translate(30px, 1px);
  transform: translate(-30px, 1px);
}

.mixins {
  /*
  prop: margin, padding, border-radius
  input(margin, 10px, 15px, 20px, 25px) output(margin: 10px 25px 20px 15px)
  */
  direction: rtl;
  /*
  prop: margin, padding, border-radius
  input(margin, 10px, 15px, 20px, 25px) output(margin: 10px 25px 20px 15px)
  */
  direction: ltr;
  /*
  prop: margin, padding, border-radius
  input(margin, 10px, 15px, 20px, 25px) output(margin: 10px 25px 20px 15px)
  */
  margin: 10px 25px 20px 15px;
  /*
  prop: margin, padding, border-radius
  input(margin, 10px, 15px, 20px, 25px) output(margin: 10px 25px 20px 15px)
  */
  padding: 10px 25px 20px 15px;
  margin-left: 10px;
  margin-right: 10px;
  padding-left: 10px;
  padding-right: 10px;
  border-left: 10px solid gray;
  border-right: 10px solid gray;
}