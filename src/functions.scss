@use 'sass:string';


/*
type of output: boolean
description: is $string contains $find
*/
@function contains($string, $find) {

  @if str-index($string, $find) {

    @return true;

  } @else {

    @return false;
  }
  
}


/*
type of output: string
description: return value in String type
*/
@function to-string($value) {

  @return inspect($value);
}


@function dir($direction) {

  @if $easy_dir-is_active == true {

    @if $direction == ltr {

      $direction: rtl;

    } @else if $direction == rtl {

      $direction: ltr;
    }

    @return $direction;

  } @else {

    @return $direction;
  }

}


/*
type of output: value selfs
=> input(left) output(right)
And conversely^
*/
@function lr($prop_dir) {

  @if $easy_dir-is_active == true {

    @if $prop_dir == left {

      $prop_dir: right;

    } @else if $prop_dir == right {

      $prop_dir: left;
    }

    @return $prop_dir;

  } @else {

    @return $prop_dir;
  }

}


/*
type of output: string
=> input(1px) output(-1px)
=> input(-1px) output(1px)
*/
@function pn($value) {

  @if $easy_dir-is_active == true {

    // convert the value to string
    $value: to-string($value);
    
    @if contains($value, "-") {

      @return string.slice($value, 2);

    } @else {

      @return -#{$value};
    }

  } @else {

    @return $value;
  }
}


/*
type of output: value selfs
=> input(1px 2px 3px 4px) output(1px 4px 3px 2px)
And conversely^
*/
@function fr($value-1, $value-2, $value-3, $value-4) {

  @if $easy_dir-is_active == true {

    @return $value-1 $value-4 $value-3 $value-2;

  } @else {
    
    @return $value-1 $value-2 $value-3 $value-4;
  }
}